---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import HeaderHero from "../../../components/HeaderHero.astro";
import { SITE_DOMAIN, SITE_TITLE } from "../../../consts";
import Layout from "../../../layouts/Layout.astro";
import Tracks from "../../../components/Tracks.astro";

export async function getStaticPaths() {
  const speakers = await getCollection("speaker");
  return speakers.map((speaker) => ({
    params: { slug: decodeURI(speaker.slug) },
  }));
}

const slug = Astro.params.slug;
const speaker = (
  await getCollection("speaker", (speaker) => speaker.slug === slug)
).map((speaker) => speaker.data)[0];

const schema = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  name: "List of Speakers",
  description:
    "A list of speakers participating in the web development conference.",
  itemListElement: {
    "@type": "Person",
    name: speaker.name,
    jobTitle: speaker.jobTitle,
    description: speaker.description,
    url: `${SITE_DOMAIN}/speakers/${speaker.name}`,
    image: speaker.image,
    sameAs: [
      speaker.twitter ? `https://twitter.com/${speaker.twitter}` : null,
      speaker.linkedin
        ? `https://www.linkedin.com/in/${speaker.linkedin}`
        : null,
    ],
  },
};
---

<Layout title={SITE_TITLE} schema={schema}>
  <main>
    <HeaderHero>
      <span slot="title">{speaker.name}</span>
      {
        speaker.image && (
          <div slot="description" class="mask mask-squircle">
            <Image
              width={128}
              height={128}
              src={speaker.image}
              alt={speaker.name}
              class="w-32 h-32 mx-auto"
            />
          </div>
        )
      }
    </HeaderHero>
    <section class="max-w-screen-lg m-auto px-8">
      <span>{speaker.description}</span>
      <Tracks title="Talks" speakerSlug={slug} />
    </section>
  </main>
</Layout>
