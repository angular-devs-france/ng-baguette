---
import { getCollection } from "astro:content";
import HeaderHero from "../../../components/HeaderHero.astro";
import { SITE_TITLE } from "../../../consts";
import Layout from "../../../layouts/Layout.astro";
import type { CollectionEntry } from "astro:content";
import Tracks from "../../../components/Tracks.astro";

export async function getStaticPaths() {
  const speakers = await getCollection("speaker");
  return speakers.map((speaker) => ({
    params: { slug: decodeURI(speaker.slug) },
  }));
}

const slug = Astro.params.slug;
const speaker = (
  await getCollection("speaker", (speaker) => speaker.slug === slug)
).map((speaker: CollectionEntry<"speaker">) => speaker.data)[0];

const schema = {
  "@context": "https://schema.org",
  "@type": "Person",
  name: speaker.name,
  jobTitle: speaker.jobTitle,
  description: speaker.description,
  url: `/fr/speakers/${speaker.name}`,
  image: speaker.image,
  sameAs: [
    speaker.twitter ? `https://twitter.com/${speaker.twitter}` : null,
    speaker.linkedin ? `https://www.linkedin.com/in/${speaker.linkedin}` : null,
  ],
};
---

<Layout title={SITE_TITLE} schema={schema}>
  <main>
    <HeaderHero>
      <span slot="title">{speaker.name}</span>
      <span slot="description">{speaker.description}</span>
    </HeaderHero>
    <section class="max-w-screen-lg m-auto px-8">
      <Tracks speakerSlug={slug} />
    </section>
  </main>
</Layout>
